1. git - это распределенная система контроля версий, github - это хостинг репозиториев, который использует git в качестве основы, но так же есть дополнительные функции, которые относятся к управлению разработкой кода.
2. В больших проектах код пишет огромное количество человек, и один и тот же проект редактируют много людей сразу, коммитят туда свои новые изменения, создают дополнительные ветки, чтобы поддерживать несколько пробных версий одного и того же кода. Git нужен, чтобы доступ к коду и его редактированию был сразу у многих людей, и все могли загрузить на локальные ноутбуки последние изменения. 
3. Push – залить изменения (коммиты) в репозиторий, commit- зафиксировать последние изменения, status – показать состояние файлов в проекте, fetch – сохраняет изменения из репозитория на локальный ноут.
4. Различные ветки проекта имеет смысл создавать для того, чтобы сохранять несколько версий одного проекта. Например, если есть ветка master и кто-нибудь хочет добавить новые изменения в проект (например, новую функциональность), которая будет отличаться от уже существующей, то для этого нужна отдельная ветка, чтобы в master оставалась текущая версия, и в конце концов можно будет слить 2 ветки вместе если станет понятно, что изменения в побочной ветке лучше. Еще иногда доп.ветки создают для тестирования или исправления ошибок.
5. Merge сливает 2 ветки, при этом сохраняет все имеющиеся изменения, rebase «перебазирует ветку», и некоторые коммиты удаляются. Минусы merge – история функциональной ветки может быстро засориться, если в main много коммитов, они все попадут туда и это не всегда удобно. Плюсы – сохраняется вся история и видно что и когда было добавлено. Rebase накатывает изменения функциональной ветки поверх ветки main, плюсы – линейная история и нет лишних коммитов, минусы – непонятно когда что было добавлено и если пользоваться неаккуратно(в публичных ветках) может случиться коллапс из-за потери части коммитов.
6. В централизованных СКВ есть единая база версий, находится на одном сервере, и все компьютеры «обращаются» к ней, администраторы могут очень легко отслеживать кто и что делает с единой базой. В децентрализованных СКВ на каждом компьютере может храниться полная копия репозитория со всеми файлами.
